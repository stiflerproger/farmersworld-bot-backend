import { CookieJar } from 'tough-cookie';

export interface WaxLoginDetails {
  /**
   * Имя пользователя
   */
  username: string;
  /**
   * Пароль
   */
  password: string;
  /**
   * Секретный токен для генерации кодов авторизации
   */
  totpSecret?: string;
  /**
   * Данные существующей сессии.
   * Если указаны, то сперва будут использованы эти данные для восстановления сессии
   */
  session?: {
    jar: string | CookieJar.Serialized;
  };
  /**
   * Автоматическая повторная авторизация (по умолчанию отключена).
   * Функция должна вернуть задержку в миллисекундах перед след. попытке авторизации.
   * Если функция возвращает `true` - след. авторизация выполняется без задержки.
   * Если же возвращаемое значение `false` - функция повторной авторизации отключается
   */
  autoReLogin?: (details: {
    /**
     * Текущая попытка авторизации после истечения сессии. Начинается с 1
     */
    currentAttempt: number;
    /**
     * Unix время последней попытки авторизации в миллисекундах
     */
    lastLoginAttemptTime: number;
    /**
     * Ошибка пред. попытки авторизации
     */
    prevAttemptError?: Error;
  }) => boolean | number | Promise<boolean | number>;
}
